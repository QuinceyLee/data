{"remainingRequest":"/Users/lee/Desktop/rulex-dashboard/node_modules/thread-loader/dist/cjs.js!/Users/lee/Desktop/rulex-dashboard/node_modules/babel-loader/lib/index.js!/Users/lee/Desktop/rulex-dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lee/Desktop/rulex-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lee/Desktop/rulex-dashboard/src/views/rule/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lee/Desktop/rulex-dashboard/src/views/rule/index.vue","mtime":1647863610790},{"path":"/Users/lee/Desktop/rulex-dashboard/babel.config.js","mtime":1646397028533},{"path":"/Users/lee/Desktop/rulex-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1646397243620},{"path":"/Users/lee/Desktop/rulex-dashboard/node_modules/thread-loader/dist/cjs.js","mtime":1646397243592},{"path":"/Users/lee/Desktop/rulex-dashboard/node_modules/babel-loader/lib/index.js","mtime":1646397244142},{"path":"/Users/lee/Desktop/rulex-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1646397243620},{"path":"/Users/lee/Desktop/rulex-dashboard/node_modules/vue-loader/lib/index.js","mtime":1646397244293}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}